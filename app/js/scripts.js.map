{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/js/core/Globals.js",
    "src/js/core/Map.js",
    "src/js/core/Player.js",
    "src/js/game/StartGame.js",
    "src/js/index.js",
    "src/js/states/Boot.js",
    "src/js/states/Game.js",
    "src/js/states/index.js"
  ],
  "names": [],
  "mappings": "AAAA;;;;;;ACAA,IAAM;aAAU,AACH,AACX;QAFc,AAER,AACN;UAHc,AAGN,AAER;;;wBALc,AAKR,AACgB,AAGtB;AAJM,AACJ;;;QAGU,AACN,AACJ;UAFU,AAEJ,AACN;UAHU,AAGJ,AACN;WAJU,AAIH,AACP;UAdY,AASF,AAKJ,AAGR;AARY,AACV;;;WAOS,AACF,AACP;OAFS,AAEN,AACH;OAHS,AAGN,AACH;SAJS,AAIJ,AACL;SAtBJ,AAAgB,AAiBH,AAKJ;AALI,AACT;AAlBY,AACd;;kB,AAyBa;;;;;;;;;;;;;;;;;;;AC1Bf;;;;;;;;;;;;;;I,AAEqB,kBACnB;eAAA,AAAY,MAAZ,AAAkB,SAAS;0BACzB;;SAAA,AAAK,OAAL,AAAY,AACZ;SAAA,AAAK,UAAU,KAAA,AAAK,KAAL,AAAU,IAAV,AAAc,QAAQ,kBAAA,AAAQ,KAA7C,AAAe,AAAmC,AAElD;;QAAM,YAAY,KAAA,AAAK,QAAvB,AAA+B,AAChC;QAAM,aAAa,KAAA,AAAK,QAAxB,AAAgC,AAEhC;;SAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,UAAhB,AAA0B,GAA1B,AAA6B,GAA7B,AAAgC,WAAhC,AAA2C,AAE1C;;SAAA,AAAK,QAAL,AAAa,gBAAb,AAA6B,+BAA7B,AAA4D,AAE5D;;SAAA,AAAK,cAAc,KAAA,AAAK,QAAL,AAAa,YAAhC,AAAmB,AAAyB,AAC5C;SAAA,AAAK,qBAAqB,KAAA,AAAK,QAAL,AAAa,YAAvC,AAA0B,AAAyB,AACnD;SAAA,AAAK,eAAe,KAAA,AAAK,QAAL,AAAa,YAAjC,AAAoB,AAAyB,AAE7C;;SAAA,AAAK,QAAL,AAAa,eAAb,AAA4B,AAE5B;;SAAA,AAAK,QAAL,AAAa,oBAAb,AAAiC,GAAjC,AAAoC,OAApC,AAA2C,MAAM,KAAjD,AAAsD,AACvD;;;;;sCAEiB,AAChB;WAAA,AAAK,YAAY,KAAA,AAAK,QAAL,AAAa,YAA9B,AAAiB,AAAyB,AAC1C;WAAA,AAAK,YAAL,AAAiB,AACjB;WAAA,AAAK,mBAAL,AAAwB,AACxB;WAAA,AAAK,aAAL,AAAkB,AAClB;WAAA,AAAK,UAAL,AAAe,AAChB;;;;;;;kB,AA3BkB;;;;;;;;;;;;;;;;;;;ACFrB;;;;;;;;;;;;;;;;;;;;;;;;;;I,AAEqB;uBACpB;;qBAAA,AAAY,MAAZ,AAAkB,GAAlB,AAAqB,GAArB,AAAwB,QAAQ;0BAAA;;sHAAA,AACzB,MADyB,AACnB,GADmB,AAChB,GADgB,AACb,AAEhB;;YAAA,AAAQ,IAAR,AAAY,AAEZ;;UAAA,AAAK,OAAL,AAAY,MAAZ,AAAkB,KAAlB,AAAuB,AAEvB;;UAAA,AAAK,gBAAgB,kBAAA,AAAQ,WAA7B,AAAwC,AAExC;;UAAA,AAAK,QAAL,AAAa,AAEb;;UAAA,AAAK,QAAL,AAAa,AACb;UAAA,AAAK,QAAL,AAAa,AAEb;;UAd6B,AAc7B,AAAK;WACP;;;;;6BAES,AACP;cAAA,AAAQ,IAAR,AAAY,AAEd;;WAAA,AAAK,KAAL,AAAU,IAAV,AAAc,SAAd,AAAuB,AACtB;WAAA,AAAK,KAAL,AAAU,QAAV,AAAkB,OAAlB,AAAyB,OAAzB,AAAgC,AAChC;WAAA,AAAK,KAAL,AAAU,qBAAV,AAA+B,AAE9B;;WAAA,AAAK,KAAL,AAAU,OAAV,AAAiB,OAAjB,AAAwB,AAEzB;;WAAA,AAAK,AACN;;;;6BAES,AACP;WAAA,AAAK,AACP;;;;oCAEgB,AACf;UAAI,iBAAJ,AAEC;;UAAG,KAAH,AAAQ,WAAW,AACjB;aAAA,AAAK,KAAL,AAAU,SAAV,AAAmB,IAAnB,AAAuB,AACvB;aAAA,AAAK,KAAL,AAAU,SAAV,AAAmB,IAAnB,AAAuB,AACvB;AACD;AAED;;UAAM,OAAO,KAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,SAAhB,AAAyB,OAAO,OAAA,AAAO,SAApD,AAAa,AAAgD,AAC7D;UAAM,QAAQ,KAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,SAAhB,AAAyB,OAAO,OAAA,AAAO,SAArD,AAAc,AAAgD,AAC9D;UAAM,KAAK,KAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,SAAhB,AAAyB,OAAO,OAAA,AAAO,SAAlD,AAAW,AAAgD,AAC3D;UAAM,OAAO,KAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,SAAhB,AAAyB,OAAO,OAAA,AAAO,SAApD,AAAa,AAAgD,AAE/D;;UAAA,AAAI,MAAM,AACP;oBAAY,kBAAA,AAAQ,WAApB,AAA+B,AAChC;AAFF,iBAEQ,AAAI,OAAO,AAChB;oBAAY,kBAAA,AAAQ,WAApB,AAA+B,AAChC;AAFM,OAAA,UAEA,AAAI,IAAI,AACb;oBAAY,kBAAA,AAAQ,WAApB,AAA+B,AAChC;AAFM,OAAA,UAEA,AAAI,MAAM,AACf;oBAAY,kBAAA,AAAQ,WAApB,AAA+B,AAChC;AAFM,OAAA,MAEA,AACL;oBAAY,kBAAA,AAAQ,WAApB,AAA+B,AAChC;AAEA;;UAAG,CAAC,KAAJ,AAAS,iBAAiB,AAC1B;aAAA,AAAK,KAAL,AAAU,AACT;AACH;;;;sCAEiB,AACf;WAAA,AAAK,WAAL,AAAgB,IAAhB,AAAoB,QAAQ,CAAA,AAAC,GAAD,AAAI,GAAhC,AAA4B,AAAO,IAAnC,AAAuC,GAAvC,AAA0C,AAC1C;WAAA,AAAK,WAAL,AAAgB,IAAI,kBAAA,AAAQ,WAA5B,AAAuC,MAAM,CAAA,AAAC,GAAD,AAAI,GAAjD,AAA6C,AAAO,IAApD,AAAwD,IAAxD,AAA4D,AAC5D;WAAA,AAAK,WAAL,AAAgB,IAAI,kBAAA,AAAQ,WAA5B,AAAuC,OAAO,CAAA,AAAC,GAAD,AAAI,GAAlD,AAA8C,AAAO,IAArD,AAAyD,IAAzD,AAA6D,AAC7D;WAAA,AAAK,WAAL,AAAgB,IAAI,kBAAA,AAAQ,WAA5B,AAAuC,IAAI,CAAA,AAAC,GAAD,AAAI,GAA/C,AAA2C,AAAO,IAAlD,AAAsD,IAAtD,AAA0D,AAC1D;WAAA,AAAK,WAAL,AAAgB,IAAI,kBAAA,AAAQ,WAA5B,AAAuC,MAAM,CAAA,AAAC,GAAD,AAAI,IAAjD,AAA6C,AAAQ,KAArD,AAA0D,IAA1D,AAA8D,AAC/D;;;;yB,AAEI,WAAW,AACd;cAAA,AAAO,AACL;aAAK,kBAAA,AAAQ,WAAb,AAAwB,AACtB;eAAA,AAAK,YAAL,AAAiB,AACjB;eAAA,AAAK,gBAAgB,kBAAA,AAAQ,WAA7B,AAAwC,AACxC;eAAA,AAAK,KAAL,AAAU,SAAV,AAAmB,IAAI,KAAvB,AAA4B,AAC5B;eAAA,AAAK,KAAL,AAAU,SAAV,AAAmB,IAAnB,AAAuB,AACvB;AAEF;;aAAK,kBAAA,AAAQ,WAAb,AAAwB,AACtB;eAAA,AAAK,YAAL,AAAiB,AACjB;eAAA,AAAK,gBAAgB,kBAAA,AAAQ,WAA7B,AAAwC,AACxC;eAAA,AAAK,KAAL,AAAU,SAAV,AAAmB,IAAnB,AAAuB,AACvB;eAAA,AAAK,KAAL,AAAU,SAAV,AAAmB,IAAI,KAAvB,AAA4B,AAC5B;AAEF;;aAAK,kBAAA,AAAQ,WAAb,AAAwB,AACtB;eAAA,AAAK,YAAL,AAAiB,AACjB;eAAA,AAAK,gBAAgB,kBAAA,AAAQ,WAA7B,AAAwC,AACxC;eAAA,AAAK,KAAL,AAAU,SAAV,AAAmB,IAAI,CAAC,KAAxB,AAA6B,AAC7B;eAAA,AAAK,KAAL,AAAU,SAAV,AAAmB,IAAnB,AAAuB,AACvB;AAEF;;aAAK,kBAAA,AAAQ,WAAb,AAAwB,AACtB;eAAA,AAAK,YAAL,AAAiB,AACjB;eAAA,AAAK,gBAAgB,kBAAA,AAAQ,WAA7B,AAAwC,AACxC;eAAA,AAAK,KAAL,AAAU,SAAV,AAAmB,IAAI,CAAC,KAAxB,AAA6B,AAC7B;eAAA,AAAK,KAAL,AAAU,SAAV,AAAmB,IAAnB,AAAuB,AACvB;AAEF;;aAAK,kBAAA,AAAQ,WAAb,AAAwB,AACtB;cAAG,CAAC,KAAJ,AAAS,WAAW,AAClB;iBAAA,AAAK,KAAL,AAAU,SAAV,AAAmB,IAAnB,AAAuB,AACvB;iBAAA,AAAK,KAAL,AAAU,SAAV,AAAmB,IAAnB,AAAuB,AACvB;iBAAA,AAAK,QAAQ,KAAb,AAAkB,AAClB;iBAAA,AAAK,WAAL,AAAgB,AACjB;AAED;;AArCJ,AAwCA;;;WAAA,AAAK,WAAL,AAAgB,KAAhB,AAAqB,AACtB;;;;;EAnHoC,O,AAAO;;kB,AAAzB;;;;;;;;;ACFrB;;I,AAAY;;;;;;;;;;;;;;;;;;;;I,AAES,YACpB,qBAAc;aAAA;;uBACb;;KAAM,QAAQ,EAAE,GAAF,AAAK,KAAK,GAAxB,AAAc,AAAa,AAE3B;;MAAA,AAAK,OAAO,IAAI,OAAJ,AAAW,KAAK,MAAhB,AAAsB,GAAG,MAAzB,AAA+B,GAAG,OAAlC,AAAyC,MAAzC,AAA+C,UAA/C,AAAyD,MAAzD,AAA+D,OAA3E,AAAY,AAAsE,AAElF;;QAAA,AAAO,KAAP,AAAY,QAAZ,AAAoB,QAAQ,iBAAA;SAAS,MAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,IAAhB,AAAoB,OAAO,OAApC,AAAS,AAA2B,AAAO;AAAvE,AAEA;;MAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,MAAhB,AAAsB,AACtB;A;;kB,AATmB;;;;;ACFrB;;;;;;;;;;;;;;I,AAEM,OACL,gBAAc;uBACX;;iBACF;A;;AAGF,EAAA,AAAE,UAAF,AAAY,MAAM,YAAM,AACvB;KAAA,AAAI,AACJ;AAFD;;;;;;;;;;;;;;;;;;;ACRA;;;;;;;;;;;;;;;;;;;;;;;;;;I,AAEqB;;;;;;;;;;;gCACV,AACP;AACF;cAAA,AAAK,KAAL,AAAU,KAAV,AAAe,YAAf,AAA2B,aAA3B,AAAwC,iCAAxC,AAAyE,IAAzE,AAA6E,AAC7E;cAAA,AAAK,KAAL,AAAU,KAAV,AAAe,YAAf,AAA2B,oBAA3B,AAA+C,mCAA/C,AAAkF,IAAlF,AAAsF,AACtF;cAAA,AAAK,KAAL,AAAU,KAAV,AAAe,YAAf,AAA2B,mBAA3B,AAA8C,kCAA9C,AAAgF,IAAhF,AAAoF,AACpF;cAAA,AAAK,KAAL,AAAU,KAAV,AAAe,YAAf,AAA2B,kBAA3B,AAA6C,iCAA7C,AAA8E,IAA9E,AAAkF,AAElF;;cAAA,AAAK,KAAL,AAAU,KAAV,AAAe,YAAf,AAA2B,UAA3B,AAAqC,+BAArC,AAAoE,IAApE,AAAwE,AACxE;cAAA,AAAK,KAAL,AAAU,KAAV,AAAe,YAAf,AAA2B,iBAA3B,AAA4C,iCAA5C,AAA6E,IAA7E,AAAiF,AACjF;cAAA,AAAK,KAAL,AAAU,KAAV,AAAe,YAAf,AAA2B,gBAA3B,AAA2C,gCAA3C,AAA2E,IAA3E,AAA+E,AAC/E;cAAA,AAAK,KAAL,AAAU,KAAV,AAAe,YAAf,AAA2B,eAA3B,AAA0C,+BAA1C,AAAyE,IAAzE,AAA6E,AAE7E;;cAAA,AAAK,KAAL,AAAU,KAAV,AAAe,YAAf,AAA2B,QAA3B,AAAmC,6BAAnC,AAAgE,IAAhE,AAAoE,AACpE;cAAA,AAAK,KAAL,AAAU,KAAV,AAAe,YAAf,AAA2B,cAA3B,AAAyC,8BAAzC,AAAuE,IAAvE,AAA2E,AAGzE;;AACA;cAAA,AAAK,KAAL,AAAU,KAAV,AAAe,QAAQ,kBAAA,AAAQ,KAA/B,AAAoC,oBAApC,AAAwD,iCAAxD,AAAyF,MAAM,OAAA,AAAO,QAAtG,AAA8G,AAC9G;cAAA,AAAK,KAAL,AAAU,KAAV,AAAe,MAAf,AAAqB,+BAArB,AAAoD,AACtD;;;;+BAEQ,AACN;cAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,MAAhB,AAAsB,AACxB;;;;;EAxBgC,O,AAAO;;kB,AAApB;;;;;;;;;;;;;;;;;;;ACFrB;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;I,AAEqB;;;;;;;;;;;6BACX,AACN;WAAA,AAAK,KAAL,AAAU,KAAV,AAAe,iBAAf,AAAgC,AAChC;WAAA,AAAK,MAAM,kBAAQ,KAAnB,AAAW,AAAa,AACxB;WAAA,AAAK,SAAS,qBAAW,KAAX,AAAgB,MAAhB,AAAsB,IAAtB,AAA0B,IAAI,kBAA5C,AAAc,AAAsC,AACpD;WAAA,AAAK,IAAL,AAAS,AACX;;;;6BAES,AACP;WAAA,AAAK,KAAL,AAAU,QAAV,AAAkB,OAAlB,AAAyB,QAAQ,KAAjC,AAAsC,QAAQ,KAAA,AAAK,IAAnD,AAAuD,AACvD;WAAA,AAAK,KAAL,AAAU,QAAV,AAAkB,OAAlB,AAAyB,QAAQ,KAAjC,AAAsC,QAAQ,KAAA,AAAK,IAAnD,AAAuD,AACxD;;;;6BAEQ,AACP;WAAA,AAAK,KAAL,AAAU,MAAV,AAAgB,KAAK,UAAQ,KAAA,AAAK,KAAL,AAAU,KAAlB,AAAuB,OAA5C,AAAmD,MAAnD,AAAyD,IAAzD,AAA6D,IAA7D,AAAiE,AAClE;;;;;EAf+B,O,AAAO;;kB,AAApB;;;;;;;;;;;;;;yC,ACJb;;;;;;;;;yC,AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "const GLOBALS = {\n  SWORDSMAN: 'SwordsMan',\n  MAGE: 'Mage',\n  ARCHER: 'Archer',\n\n  MAPS: {\n    FOREST_BOTTOM_LEFT: 'forest_bottom_left',\n  },\n\n  DIRECTIONS: {\n    UP: 'top',\n    DOWN: 'down',\n    LEFT: 'left',\n    RIGHT: 'right',\n    STOP: 'stop'\n  },\n\n  KEY_CODES: {\n    ENTER: 13,\n    A: 65,\n    L: 76,\n    ONE: 49,\n    TWO: 50\n  }\n}\n\nexport default GLOBALS;\n",
    "import GLOBALS from '../core/Globals';\n\nexport default class Map {\n  constructor(game, options) {\n    this.game = game;\n    this.tilemap = this.game.add.tilemap(GLOBALS.MAPS.FOREST_BOTTOM_LEFT);\n\n    const gameWidth = this.tilemap.widthInPixels;\n\t  const\tgameHeight = this.tilemap.heightInPixels;\n\n\t  this.game.world.setBounds(0, 0, gameWidth, gameHeight);\n\n    this.tilemap.addTilesetImage('sprites_background_32x32_v3', 'sprites_background_32x32_v3');\n\n    this.groundLayer = this.tilemap.createLayer('Ground');\n    this.groundOverlapLayer = this.tilemap.createLayer('Ground_overlap');\n    this.collideLayer = this.tilemap.createLayer('Collide');\n\n    this.tilemap.currentLayer = 3;\n\n    this.tilemap.setCollisionBetween(1, 10000, true, this.collideLayer);\n  }\n\n  renderLastLayer() {\n    this.passLayer = this.tilemap.createLayer('Pass');\n    this.groundLayer.resizeWorld();\n    this.groundOverlapLayer.resizeWorld();\n    this.collideLayer.resizeWorld();\n    this.passLayer.resizeWorld();\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\n\nexport default class Character extends Phaser.Sprite {\n\tconstructor(game, x, y, sprite) {\n\t\tsuper(game, x, y, sprite);\n\n    console.log(arguments)\n\n    this.anchor.setTo(0.5, 0.5);\n\n    this.lastDirection = GLOBALS.DIRECTIONS.DOWN;\n\n    this.speed = 200;\n\n    this.frame = 0;\n    this.alive = true;\n\n    this.create();\n\t}\n\n  create() {\n    console.log('hey')\n\n\t\tthis.game.add.existing(this);\n\t  this.game.physics.arcade.enable(this);\n\t  this.body.collideWorldBounds = true;\n\n    this.game.camera.follow(this);\n\n\t  this.setupAnimations();\n\t}\n\n  update() {\n    this.handleWalking();\n\t}\n\n  handleWalking() {\n\t  let direction;\n\n    if(this.attacking) {\n      this.body.velocity.x = 0;\n      this.body.velocity.y = 0;\n      return;\n    }\n\n    const left = this.game.input.keyboard.isDown(Phaser.Keyboard.A);\n    const right = this.game.input.keyboard.isDown(Phaser.Keyboard.D);\n    const up = this.game.input.keyboard.isDown(Phaser.Keyboard.W);\n    const down = this.game.input.keyboard.isDown(Phaser.Keyboard.S);\n\n\t\tif (left) {\n\t    direction = GLOBALS.DIRECTIONS.LEFT;\n\t  } else if (right) {\n\t    direction = GLOBALS.DIRECTIONS.RIGHT;\n\t  } else if (up) {\n\t    direction = GLOBALS.DIRECTIONS.UP;\n\t  } else if (down) {\n\t    direction = GLOBALS.DIRECTIONS.DOWN;\n\t  } else {\n\t    direction = GLOBALS.DIRECTIONS.STOP;\n\t  }\n\n    if(!this.receivingAttack) {\n\t\t  this.walk(direction);\n    }\n\t}\n\n\tsetupAnimations() {\n    this.animations.add('dead', [0, 1, 2], 3, true);\n    this.animations.add(GLOBALS.DIRECTIONS.DOWN, [0, 1, 2], 10, false);\n    this.animations.add(GLOBALS.DIRECTIONS.RIGHT, [3, 4, 5], 10, false);\n    this.animations.add(GLOBALS.DIRECTIONS.UP, [6, 7, 8], 10, false);\n    this.animations.add(GLOBALS.DIRECTIONS.LEFT, [9, 10, 11], 10, false);\n  }\n\n  walk(direction) {\n    switch(direction){\n      case GLOBALS.DIRECTIONS.DOWN:\n        this.lastFrame = 0;\n        this.lastDirection = GLOBALS.DIRECTIONS.DOWN;\n        this.body.velocity.y = this.speed;\n        this.body.velocity.x = 0;\n        break;\n\n      case GLOBALS.DIRECTIONS.RIGHT:\n        this.lastFrame = 3;\n        this.lastDirection = GLOBALS.DIRECTIONS.RIGHT;\n        this.body.velocity.y = 0;\n        this.body.velocity.x = this.speed;\n        break;\n\n      case GLOBALS.DIRECTIONS.UP:\n        this.lastFrame = 6;\n        this.lastDirection = GLOBALS.DIRECTIONS.UP;\n        this.body.velocity.y = -this.speed;\n        this.body.velocity.x = 0;\n        break;\n\n      case GLOBALS.DIRECTIONS.LEFT:\n        this.lastFrame = 9;\n        this.lastDirection = GLOBALS.DIRECTIONS.LEFT;\n        this.body.velocity.x = -this.speed;\n        this.body.velocity.y = 0;\n        break;\n\n      case GLOBALS.DIRECTIONS.STOP:\n        if(!this.attacking) {\n          this.body.velocity.x = 0;\n          this.body.velocity.y = 0;\n          this.frame = this.lastFrame;\n          this.animations.stop();\n        }\n\n        break;\n    }\n\n    this.animations.play(direction);\n  }\n}\n",
    "import * as states from '../states';\n\nexport default class StartGame {\n\tconstructor() {\n\t\tconst sizes = { w: 980, h: 470 };\n\n\t\tthis.game = new Phaser.Game(sizes.w, sizes.h, Phaser.AUTO, 'phaser', null, false, false);\n\n\t\tObject.keys(states).forEach(state => this.game.state.add(state, states[state]));\n\n\t\tthis.game.state.start('Boot');\n\t}\n}\n",
    "import StartGame from 'game/StartGame';\n\nclass Main {\n\tconstructor() {\n    new StartGame();\n\t}\n}\n\n$(document).ready(() => {\n\tnew Main();\n})\n",
    "import GLOBALS from '../core/Globals';\n\nexport default class Boot extends Phaser.State {\n\tpreload() {\n    //Player\n\t\tthis.game.load.spritesheet('SwordsMan', 'img/classes/swordman_walk.png', 32, 32);\n\t\tthis.game.load.spritesheet('SwordsMan_attack', 'img/classes/swordman_attack.png', 64, 64);\n\t\tthis.game.load.spritesheet('SwordsMan_sleep', 'img/classes/swordman_sleep.png', 64, 64);\n\t\tthis.game.load.spritesheet('SwordsMan_dead', 'img/classes/swordman_dead.png', 64, 64);\n\n\t\tthis.game.load.spritesheet('Archer', 'img/classes/archer_walk.png', 32, 32);\n\t\tthis.game.load.spritesheet('Archer_attack', 'img/classes/archer_attack.png', 64, 64);\n\t\tthis.game.load.spritesheet('Archer_sleep', 'img/classes/archer_sleep.png', 64, 64);\n\t\tthis.game.load.spritesheet('Archer_dead', 'img/classes/archer_dead.png', 64, 64);\n\n\t\tthis.game.load.spritesheet('Mage', 'img/classes/mage_walk.png', 32, 32);\n\t\tthis.game.load.spritesheet('Mage_sleep', 'img/classes/mage_sleep.png', 64, 64);\n\n\n    //Maps\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_BOTTOM_LEFT, 'tiles/forest_bottom_left.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.image('sprites_background_32x32_v3', 'tiles/sprites_background_32x32_v3.png');\n\t}\n\n\tcreate() {\n    this.game.state.start('Game');\n\t}\n}\n",
    "import Map from '../core/Map';\nimport Player from '../core/Player';\nimport GLOBALS from '../core/Globals';\n\nexport default class Game extends Phaser.State {\n\tcreate() {\n    this.game.time.advancedTiming = true;\n    this.map = new Map(this.game);\n    this.player = new Player(this.game, 50, 50, GLOBALS.SWORDSMAN);\n    this.map.renderLastLayer();\n\t}\n\n  update() {\n    this.game.physics.arcade.collide(this.player, this.map.collideLayer);\n    this.game.physics.arcade.collide(this.player, this.map.groundLayer);\n  }\n\n  render() {\n    this.game.debug.text('fps: '+this.game.time.fps || '--', 35, 20, \"#fff\");\n  }\n}\n",
    "export {default as Boot} from './Boot';\nexport {default as Game} from './Game';\n"
  ]
}